@inject NavigationManager navigationManager
<div class="card m-2" style="width: 25rem;">
    <div class="card-body">
        <h5 class="card-title">Tổng thanh toán</h5>
        <div class="card-text d-flex justify-content-between">
            <div>Tổng (@itemsCount):</div>
            <div>@itemTotalPrice.ToString("c")</div>
        </div>
        <div class="card-text d-flex justify-content-between">
            <div>Vận chuyển và xử lý:</div>
            <div>$0.00</div>
        </div>
        <div class="card-text d-flex justify-content-between">
            <div>Thuế:</div>
            <div>$0.00</div>
        </div>
        <hr />
        <div class="card-text d-flex justify-content-between" style="color: darkred;">
            <div><b>Tổng thanh toán:</b></div>
            <div><b>@itemTotalPrice.ToString("c")</b></div>
        </div>
    </div>
    <div class="col">
        @if (!HidePlaceOrder)
        {
            <button class="button btn-primary pink-button" @onclick="PlaceOrder">Đặt hàng ngay</button>
        }
    </div>
</div>

<style>
    .card {
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .card-body {
        padding: 20px;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 1rem;
    }

    .card-text {
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }

        .card-text b {
            font-weight: bold;
        }

    .pink-button {
        background-color: #ff69b4;
        border-color: #ff69b4;
        color: white;
    }

        .pink-button:hover {
            background-color: #ff85c0;
            border-color: #ff85c0;
            color: white;
        }
</style>


@code {
    int itemsCount = 0;
    double itemTotalPrice = 0;

    [Parameter]
    public Order order{ get; set; }
    [Parameter]
    public bool HidePlaceOrder { get; set; } = false;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if(order!=null)
        {
            itemsCount = order.LineItems.Count;
            itemTotalPrice = 0;
            order.LineItems.ForEach(x => itemTotalPrice += x.Price * x.Quantity);
        }
    }
    private void PlaceOrder()
    {
        navigationManager.NavigateTo($"/placeOrder");
    }
}
